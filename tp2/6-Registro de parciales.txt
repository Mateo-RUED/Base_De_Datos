DELIMITER //

CREATE FUNCTION contar_parciales_aprobados(p_id_alumno INT, p_id_materia INT)
RETURNS INT
DETERMINISTIC
BEGIN
    DECLARE aprobados INT;
    
    SELECT COUNT(*) INTO aprobados
    FROM parcial_inscripcion pi
    INNER JOIN inscripcion_materia im ON pi.id_inscripcion_materia = im.id_inscripcion_materia
    WHERE im.id_alumno = p_id_alumno
    AND im.id_materia = p_id_materia
    AND pi.nota >= 4.00;

    RETURN aprobados;
END //

DELIMITER ;
DELIMITER //

CREATE FUNCTION contar_parciales_desaprobados(p_id_alumno INT, p_id_materia INT)
RETURNS INT
DETERMINISTIC
BEGIN
    DECLARE desaprobados INT;
    
    SELECT COUNT(*) INTO desaprobados
    FROM parcial_inscripcion pi
    INNER JOIN inscripcion_materia im ON pi.id_inscripcion_materia = im.id_inscripcion_materia
    WHERE im.id_alumno = p_id_alumno
    AND im.id_materia = p_id_materia
    AND pi.nota < 4.00;

    RETURN desaprobados;
END //

DELIMITER ;

-- Función para verificar si el estado de inscripción es "Cursando"
DELIMITER //

CREATE FUNCTION verificar_estado_inscripcion(p_id_alumno INT, p_id_materia INT)
RETURNS BOOLEAN
DETERMINISTIC
BEGIN
    DECLARE estado_actual VARCHAR(20);
    
    SELECT estado INTO estado_actual
    FROM inscripcion_materia
    WHERE id_alumno = p_id_alumno
    AND id_materia = p_id_materia;
    
    IF estado_actual = 'cursando' THEN
        RETURN TRUE;
    ELSE
        RETURN FALSE;
    END IF;
END //

DELIMITER ;

-- Procedimiento para agregar una nota de parcial
DELIMITER //

CREATE PROCEDURE agregar_nota_parcial(
    IN p_id_alumno INT,
    IN p_id_materia INT,
    IN p_id_parcial INT,
    IN p_nota DECIMAL(5,2)
)
BEGIN
    DECLARE aprobados INT;
    DECLARE desaprobados INT;
    DECLARE estado_valido BOOLEAN;

    SET estado_valido = verificar_estado_inscripcion(p_id_alumno, p_id_materia);
    
    IF estado_valido THEN
        INSERT INTO parcial_inscripcion (id_parcial, id_inscripcion_materia, nota)
        SELECT p_id_parcial, ins.id_inscripcion_materia, p_nota
        FROM inscripcion_materia ins
        WHERE ins.id_alumno = p_id_alumno
        AND ins.id_materia = p_id_materia;
        
        SET aprobados = contar_parciales_aprobados(p_id_alumno, p_id_materia);
        SET desaprobados = contar_parciales_desaprobados(p_id_alumno, p_id_materia);
        
        IF aprobados >= 2 THEN
            UPDATE inscripcion_materia
            SET estado = 'regular'
            WHERE id_alumno = p_id_alumno
            AND id_materia = p_id_materia;
        ELSEIF desaprobados >= 2 THEN
            UPDATE inscripcion_materia
            SET estado = 'libre'
            WHERE id_alumno = p_id_alumno
            AND id_materia = p_id_materia;
        END IF;
    ELSE
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'No se puede registrar el parcial. El estado de la inscripción no es "Cursando".';
    END IF;
END //

DELIMITER ;
CALL agregar_nota_parcial(1, 2, 3, 8.50);
