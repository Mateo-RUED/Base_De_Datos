DELIMITER //

CREATE FUNCTION tiene_inscripcion_sin_calificacion(p_id_alumno INT, p_id_materia INT)
RETURNS BOOLEAN
DETERMINISTIC
BEGIN
    DECLARE v_count INT;

    SELECT COUNT(*) INTO v_count
    FROM inscripcion_examen ie
    INNER JOIN mesa m ON ie.id_mesa = m.id_mesa
    WHERE ie.id_alumno = p_id_alumno
    AND m.id_materia = p_id_materia
    AND ie.nota IS NULL;

    RETURN v_count > 0;
END //

DELIMITER ;

DELIMITER //

CREATE FUNCTION esta_regular(p_id_alumno INT, p_id_materia INT)
RETURNS BOOLEAN
DETERMINISTIC
BEGIN
    DECLARE v_estado VARCHAR(50);

    SELECT im.estado INTO v_estado
    FROM inscripcion_materia im
    WHERE im.id_alumno = p_id_alumno
    AND im.id_materia = p_id_materia;

    RETURN v_estado = 'regular';
END //

DELIMITER ;

DELIMITER //

CREATE PROCEDURE inscribir_en_examen(
    IN p_id_alumno INT,
    IN p_id_materia INT,
    IN p_id_mesa INT,
    IN p_fecha_inscripcion DATE
)
BEGIN
    IF tiene_inscripcion_sin_calificacion(p_id_alumno, p_id_materia) THEN
        SELECT 'El alumno ya tiene una inscripción previa sin calificación en el examen.' AS mensaje;
    ELSEIF NOT esta_regular(p_id_alumno, p_id_materia) THEN
        SELECT 'El alumno no está en estado regular en la materia.' AS mensaje;
    ELSE
        INSERT INTO inscripcion_examen (id_alumno, id_mesa, fecha_inscripcion, nota, estado)
        VALUES (p_id_alumno, p_id_mesa, p_fecha_inscripcion, NULL, NULL);
        SELECT 'Inscripción exitosa en el examen.' AS mensaje;
    END IF;
END //

DELIMITER ;
----------------------------------------------------------------------------------------------------------------
-- Para probar el procedimiento
CALL inscribir_en_examen('Juan', 'Pérez', 'Programacion I', 1, '2024-09-16');
